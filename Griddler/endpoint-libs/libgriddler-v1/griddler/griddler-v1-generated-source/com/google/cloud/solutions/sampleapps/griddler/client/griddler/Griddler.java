/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-15 19:10:39 UTC)
 * on 2014-05-05 at 04:21:55 UTC 
 * Modify at your own risk.
 */

package com.google.cloud.solutions.sampleapps.griddler.client.griddler;

/**
 * Service definition for Griddler (v1).
 *
 * <p>
 * Griddler API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GriddlerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Griddler extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the griddler library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://griddlerid.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "griddler/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Griddler(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Griddler(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the GameEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Griddler griddler = new Griddler(...);}
   *   {@code Griddler.GameEndpoint.List request = griddler.gameEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public GameEndpoint gameEndpoint() {
    return new GameEndpoint();
  }

  /**
   * The "gameEndpoint" collection of methods.
   */
  public class GameEndpoint {

    /**
     * Create a request for the method "gameEndpoint.acceptInvitation".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link AcceptInvitation#execute()} method to invoke the remote operation.
     *
     * @param gameId
     * @param invitationId
     * @return the request
     */
    public AcceptInvitation acceptInvitation(java.lang.Long gameId, java.lang.Long invitationId) throws java.io.IOException {
      AcceptInvitation result = new AcceptInvitation(gameId, invitationId);
      initialize(result);
      return result;
    }

    public class AcceptInvitation extends GriddlerRequest<Void> {

      private static final String REST_PATH = "games/{gameId}/invitations/{invitationId}/accept";

      /**
       * Create a request for the method "gameEndpoint.acceptInvitation".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link AcceptInvitation#execute()} method to invoke the remote
       * operation. <p> {@link AcceptInvitation#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param gameId
       * @param invitationId
       * @since 1.13
       */
      protected AcceptInvitation(java.lang.Long gameId, java.lang.Long invitationId) {
        super(Griddler.this, "PUT", REST_PATH, null, Void.class);
        this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
        this.invitationId = com.google.api.client.util.Preconditions.checkNotNull(invitationId, "Required parameter invitationId must be specified.");
      }

      @Override
      public AcceptInvitation setAlt(java.lang.String alt) {
        return (AcceptInvitation) super.setAlt(alt);
      }

      @Override
      public AcceptInvitation setFields(java.lang.String fields) {
        return (AcceptInvitation) super.setFields(fields);
      }

      @Override
      public AcceptInvitation setKey(java.lang.String key) {
        return (AcceptInvitation) super.setKey(key);
      }

      @Override
      public AcceptInvitation setOauthToken(java.lang.String oauthToken) {
        return (AcceptInvitation) super.setOauthToken(oauthToken);
      }

      @Override
      public AcceptInvitation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AcceptInvitation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AcceptInvitation setQuotaUser(java.lang.String quotaUser) {
        return (AcceptInvitation) super.setQuotaUser(quotaUser);
      }

      @Override
      public AcceptInvitation setUserIp(java.lang.String userIp) {
        return (AcceptInvitation) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long gameId;

      /**

       */
      public java.lang.Long getGameId() {
        return gameId;
      }

      public AcceptInvitation setGameId(java.lang.Long gameId) {
        this.gameId = gameId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long invitationId;

      /**

       */
      public java.lang.Long getInvitationId() {
        return invitationId;
      }

      public AcceptInvitation setInvitationId(java.lang.Long invitationId) {
        this.invitationId = invitationId;
        return this;
      }

      @Override
      public AcceptInvitation set(String parameterName, Object value) {
        return (AcceptInvitation) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.cancelInvitation".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link CancelInvitation#execute()} method to invoke the remote operation.
     *
     * @param gameId
     * @param invitationId
     * @return the request
     */
    public CancelInvitation cancelInvitation(java.lang.Long gameId, java.lang.Long invitationId) throws java.io.IOException {
      CancelInvitation result = new CancelInvitation(gameId, invitationId);
      initialize(result);
      return result;
    }

    public class CancelInvitation extends GriddlerRequest<Void> {

      private static final String REST_PATH = "games/{gameId}/invitations/{invitationId}/cancel";

      /**
       * Create a request for the method "gameEndpoint.cancelInvitation".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link CancelInvitation#execute()} method to invoke the remote
       * operation. <p> {@link CancelInvitation#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param gameId
       * @param invitationId
       * @since 1.13
       */
      protected CancelInvitation(java.lang.Long gameId, java.lang.Long invitationId) {
        super(Griddler.this, "PUT", REST_PATH, null, Void.class);
        this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
        this.invitationId = com.google.api.client.util.Preconditions.checkNotNull(invitationId, "Required parameter invitationId must be specified.");
      }

      @Override
      public CancelInvitation setAlt(java.lang.String alt) {
        return (CancelInvitation) super.setAlt(alt);
      }

      @Override
      public CancelInvitation setFields(java.lang.String fields) {
        return (CancelInvitation) super.setFields(fields);
      }

      @Override
      public CancelInvitation setKey(java.lang.String key) {
        return (CancelInvitation) super.setKey(key);
      }

      @Override
      public CancelInvitation setOauthToken(java.lang.String oauthToken) {
        return (CancelInvitation) super.setOauthToken(oauthToken);
      }

      @Override
      public CancelInvitation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CancelInvitation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CancelInvitation setQuotaUser(java.lang.String quotaUser) {
        return (CancelInvitation) super.setQuotaUser(quotaUser);
      }

      @Override
      public CancelInvitation setUserIp(java.lang.String userIp) {
        return (CancelInvitation) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long gameId;

      /**

       */
      public java.lang.Long getGameId() {
        return gameId;
      }

      public CancelInvitation setGameId(java.lang.Long gameId) {
        this.gameId = gameId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long invitationId;

      /**

       */
      public java.lang.Long getInvitationId() {
        return invitationId;
      }

      public CancelInvitation setInvitationId(java.lang.Long invitationId) {
        this.invitationId = invitationId;
        return this;
      }

      @Override
      public CancelInvitation set(String parameterName, Object value) {
        return (CancelInvitation) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.declineInvitation".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link DeclineInvitation#execute()} method to invoke the remote operation.
     *
     * @param gameId
     * @param invitationId
     * @return the request
     */
    public DeclineInvitation declineInvitation(java.lang.Long gameId, java.lang.Long invitationId) throws java.io.IOException {
      DeclineInvitation result = new DeclineInvitation(gameId, invitationId);
      initialize(result);
      return result;
    }

    public class DeclineInvitation extends GriddlerRequest<Void> {

      private static final String REST_PATH = "games/{gameId}/invitations/{invitationId}/decline";

      /**
       * Create a request for the method "gameEndpoint.declineInvitation".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link DeclineInvitation#execute()} method to invoke the remote
       * operation. <p> {@link DeclineInvitation#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param gameId
       * @param invitationId
       * @since 1.13
       */
      protected DeclineInvitation(java.lang.Long gameId, java.lang.Long invitationId) {
        super(Griddler.this, "PUT", REST_PATH, null, Void.class);
        this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
        this.invitationId = com.google.api.client.util.Preconditions.checkNotNull(invitationId, "Required parameter invitationId must be specified.");
      }

      @Override
      public DeclineInvitation setAlt(java.lang.String alt) {
        return (DeclineInvitation) super.setAlt(alt);
      }

      @Override
      public DeclineInvitation setFields(java.lang.String fields) {
        return (DeclineInvitation) super.setFields(fields);
      }

      @Override
      public DeclineInvitation setKey(java.lang.String key) {
        return (DeclineInvitation) super.setKey(key);
      }

      @Override
      public DeclineInvitation setOauthToken(java.lang.String oauthToken) {
        return (DeclineInvitation) super.setOauthToken(oauthToken);
      }

      @Override
      public DeclineInvitation setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeclineInvitation) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeclineInvitation setQuotaUser(java.lang.String quotaUser) {
        return (DeclineInvitation) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeclineInvitation setUserIp(java.lang.String userIp) {
        return (DeclineInvitation) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long gameId;

      /**

       */
      public java.lang.Long getGameId() {
        return gameId;
      }

      public DeclineInvitation setGameId(java.lang.Long gameId) {
        this.gameId = gameId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long invitationId;

      /**

       */
      public java.lang.Long getInvitationId() {
        return invitationId;
      }

      public DeclineInvitation setInvitationId(java.lang.Long invitationId) {
        this.invitationId = invitationId;
        return this;
      }

      @Override
      public DeclineInvitation set(String parameterName, Object value) {
        return (DeclineInvitation) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.getGame".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link GetGame#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public GetGame getGame(java.lang.Long id) throws java.io.IOException {
      GetGame result = new GetGame(id);
      initialize(result);
      return result;
    }

    public class GetGame extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Game> {

      private static final String REST_PATH = "games/{id}";

      /**
       * Create a request for the method "gameEndpoint.getGame".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link GetGame#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetGame#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected GetGame(java.lang.Long id) {
        super(Griddler.this, "GET", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Game.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetGame setAlt(java.lang.String alt) {
        return (GetGame) super.setAlt(alt);
      }

      @Override
      public GetGame setFields(java.lang.String fields) {
        return (GetGame) super.setFields(fields);
      }

      @Override
      public GetGame setKey(java.lang.String key) {
        return (GetGame) super.setKey(key);
      }

      @Override
      public GetGame setOauthToken(java.lang.String oauthToken) {
        return (GetGame) super.setOauthToken(oauthToken);
      }

      @Override
      public GetGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetGame setQuotaUser(java.lang.String quotaUser) {
        return (GetGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetGame setUserIp(java.lang.String userIp) {
        return (GetGame) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public GetGame setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public GetGame set(String parameterName, Object value) {
        return (GetGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.getInvitationStatus".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link GetInvitationStatus#execute()} method to invoke the remote operation.
     *
     * @param gameId
     * @param invitationId
     * @return the request
     */
    public GetInvitationStatus getInvitationStatus(java.lang.Long gameId, java.lang.Long invitationId) throws java.io.IOException {
      GetInvitationStatus result = new GetInvitationStatus(gameId, invitationId);
      initialize(result);
      return result;
    }

    public class GetInvitationStatus extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation> {

      private static final String REST_PATH = "games/{gameId}/invitations/{invitationId}";

      /**
       * Create a request for the method "gameEndpoint.getInvitationStatus".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link GetInvitationStatus#execute()} method to invoke the remote
       * operation. <p> {@link GetInvitationStatus#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param gameId
       * @param invitationId
       * @since 1.13
       */
      protected GetInvitationStatus(java.lang.Long gameId, java.lang.Long invitationId) {
        super(Griddler.this, "GET", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation.class);
        this.gameId = com.google.api.client.util.Preconditions.checkNotNull(gameId, "Required parameter gameId must be specified.");
        this.invitationId = com.google.api.client.util.Preconditions.checkNotNull(invitationId, "Required parameter invitationId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetInvitationStatus setAlt(java.lang.String alt) {
        return (GetInvitationStatus) super.setAlt(alt);
      }

      @Override
      public GetInvitationStatus setFields(java.lang.String fields) {
        return (GetInvitationStatus) super.setFields(fields);
      }

      @Override
      public GetInvitationStatus setKey(java.lang.String key) {
        return (GetInvitationStatus) super.setKey(key);
      }

      @Override
      public GetInvitationStatus setOauthToken(java.lang.String oauthToken) {
        return (GetInvitationStatus) super.setOauthToken(oauthToken);
      }

      @Override
      public GetInvitationStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetInvitationStatus) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetInvitationStatus setQuotaUser(java.lang.String quotaUser) {
        return (GetInvitationStatus) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetInvitationStatus setUserIp(java.lang.String userIp) {
        return (GetInvitationStatus) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long gameId;

      /**

       */
      public java.lang.Long getGameId() {
        return gameId;
      }

      public GetInvitationStatus setGameId(java.lang.Long gameId) {
        this.gameId = gameId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long invitationId;

      /**

       */
      public java.lang.Long getInvitationId() {
        return invitationId;
      }

      public GetInvitationStatus setInvitationId(java.lang.Long invitationId) {
        this.invitationId = invitationId;
        return this;
      }

      @Override
      public GetInvitationStatus set(String parameterName, Object value) {
        return (GetInvitationStatus) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.startMultiplayerGame".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link StartMultiplayerGame#execute()} method to invoke the remote
     * operation.
     *
     * @param boardLevel
     * @param inviteeId
     * @return the request
     */
    public StartMultiplayerGame startMultiplayerGame(java.lang.Integer boardLevel, java.lang.Long inviteeId) throws java.io.IOException {
      StartMultiplayerGame result = new StartMultiplayerGame(boardLevel, inviteeId);
      initialize(result);
      return result;
    }

    public class StartMultiplayerGame extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation> {

      private static final String REST_PATH = "games/startMultiPlayer";

      /**
       * Create a request for the method "gameEndpoint.startMultiplayerGame".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link StartMultiplayerGame#execute()} method to invoke the
       * remote operation. <p> {@link StartMultiplayerGame#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param boardLevel
       * @param inviteeId
       * @since 1.13
       */
      protected StartMultiplayerGame(java.lang.Integer boardLevel, java.lang.Long inviteeId) {
        super(Griddler.this, "POST", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation.class);
        this.boardLevel = com.google.api.client.util.Preconditions.checkNotNull(boardLevel, "Required parameter boardLevel must be specified.");
        this.inviteeId = com.google.api.client.util.Preconditions.checkNotNull(inviteeId, "Required parameter inviteeId must be specified.");
      }

      @Override
      public StartMultiplayerGame setAlt(java.lang.String alt) {
        return (StartMultiplayerGame) super.setAlt(alt);
      }

      @Override
      public StartMultiplayerGame setFields(java.lang.String fields) {
        return (StartMultiplayerGame) super.setFields(fields);
      }

      @Override
      public StartMultiplayerGame setKey(java.lang.String key) {
        return (StartMultiplayerGame) super.setKey(key);
      }

      @Override
      public StartMultiplayerGame setOauthToken(java.lang.String oauthToken) {
        return (StartMultiplayerGame) super.setOauthToken(oauthToken);
      }

      @Override
      public StartMultiplayerGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StartMultiplayerGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StartMultiplayerGame setQuotaUser(java.lang.String quotaUser) {
        return (StartMultiplayerGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public StartMultiplayerGame setUserIp(java.lang.String userIp) {
        return (StartMultiplayerGame) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer boardLevel;

      /**

       */
      public java.lang.Integer getBoardLevel() {
        return boardLevel;
      }

      public StartMultiplayerGame setBoardLevel(java.lang.Integer boardLevel) {
        this.boardLevel = boardLevel;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long inviteeId;

      /**

       */
      public java.lang.Long getInviteeId() {
        return inviteeId;
      }

      public StartMultiplayerGame setInviteeId(java.lang.Long inviteeId) {
        this.inviteeId = inviteeId;
        return this;
      }

      @Override
      public StartMultiplayerGame set(String parameterName, Object value) {
        return (StartMultiplayerGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.startMultiplayerGameByGooglePlusId".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link StartMultiplayerGameByGooglePlusId#execute()} method to invoke the
     * remote operation.
     *
     * @param boardLevel
     * @param inviteeGooglePlusId
     * @return the request
     */
    public StartMultiplayerGameByGooglePlusId startMultiplayerGameByGooglePlusId(java.lang.Integer boardLevel, java.lang.String inviteeGooglePlusId) throws java.io.IOException {
      StartMultiplayerGameByGooglePlusId result = new StartMultiplayerGameByGooglePlusId(boardLevel, inviteeGooglePlusId);
      initialize(result);
      return result;
    }

    public class StartMultiplayerGameByGooglePlusId extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation> {

      private static final String REST_PATH = "games/startMultiPlayerWithGooglePlus";

      /**
       * Create a request for the method "gameEndpoint.startMultiplayerGameByGooglePlusId".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link StartMultiplayerGameByGooglePlusId#execute()} method to
       * invoke the remote operation. <p> {@link StartMultiplayerGameByGooglePlusId#initialize(com.googl
       * e.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize
       * this instance immediately after invoking the constructor. </p>
       *
       * @param boardLevel
       * @param inviteeGooglePlusId
       * @since 1.13
       */
      protected StartMultiplayerGameByGooglePlusId(java.lang.Integer boardLevel, java.lang.String inviteeGooglePlusId) {
        super(Griddler.this, "POST", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Invitation.class);
        this.boardLevel = com.google.api.client.util.Preconditions.checkNotNull(boardLevel, "Required parameter boardLevel must be specified.");
        this.inviteeGooglePlusId = com.google.api.client.util.Preconditions.checkNotNull(inviteeGooglePlusId, "Required parameter inviteeGooglePlusId must be specified.");
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setAlt(java.lang.String alt) {
        return (StartMultiplayerGameByGooglePlusId) super.setAlt(alt);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setFields(java.lang.String fields) {
        return (StartMultiplayerGameByGooglePlusId) super.setFields(fields);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setKey(java.lang.String key) {
        return (StartMultiplayerGameByGooglePlusId) super.setKey(key);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setOauthToken(java.lang.String oauthToken) {
        return (StartMultiplayerGameByGooglePlusId) super.setOauthToken(oauthToken);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StartMultiplayerGameByGooglePlusId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setQuotaUser(java.lang.String quotaUser) {
        return (StartMultiplayerGameByGooglePlusId) super.setQuotaUser(quotaUser);
      }

      @Override
      public StartMultiplayerGameByGooglePlusId setUserIp(java.lang.String userIp) {
        return (StartMultiplayerGameByGooglePlusId) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer boardLevel;

      /**

       */
      public java.lang.Integer getBoardLevel() {
        return boardLevel;
      }

      public StartMultiplayerGameByGooglePlusId setBoardLevel(java.lang.Integer boardLevel) {
        this.boardLevel = boardLevel;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String inviteeGooglePlusId;

      /**

       */
      public java.lang.String getInviteeGooglePlusId() {
        return inviteeGooglePlusId;
      }

      public StartMultiplayerGameByGooglePlusId setInviteeGooglePlusId(java.lang.String inviteeGooglePlusId) {
        this.inviteeGooglePlusId = inviteeGooglePlusId;
        return this;
      }

      @Override
      public StartMultiplayerGameByGooglePlusId set(String parameterName, Object value) {
        return (StartMultiplayerGameByGooglePlusId) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.startSinglePlayerGame".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link StartSinglePlayerGame#execute()} method to invoke the remote
     * operation.
     *
     * @param boardLevel
     * @return the request
     */
    public StartSinglePlayerGame startSinglePlayerGame(java.lang.Integer boardLevel) throws java.io.IOException {
      StartSinglePlayerGame result = new StartSinglePlayerGame(boardLevel);
      initialize(result);
      return result;
    }

    public class StartSinglePlayerGame extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Game> {

      private static final String REST_PATH = "games/startSinglePlayer";

      /**
       * Create a request for the method "gameEndpoint.startSinglePlayerGame".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link StartSinglePlayerGame#execute()} method to invoke the
       * remote operation. <p> {@link StartSinglePlayerGame#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param boardLevel
       * @since 1.13
       */
      protected StartSinglePlayerGame(java.lang.Integer boardLevel) {
        super(Griddler.this, "POST", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Game.class);
        this.boardLevel = com.google.api.client.util.Preconditions.checkNotNull(boardLevel, "Required parameter boardLevel must be specified.");
      }

      @Override
      public StartSinglePlayerGame setAlt(java.lang.String alt) {
        return (StartSinglePlayerGame) super.setAlt(alt);
      }

      @Override
      public StartSinglePlayerGame setFields(java.lang.String fields) {
        return (StartSinglePlayerGame) super.setFields(fields);
      }

      @Override
      public StartSinglePlayerGame setKey(java.lang.String key) {
        return (StartSinglePlayerGame) super.setKey(key);
      }

      @Override
      public StartSinglePlayerGame setOauthToken(java.lang.String oauthToken) {
        return (StartSinglePlayerGame) super.setOauthToken(oauthToken);
      }

      @Override
      public StartSinglePlayerGame setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (StartSinglePlayerGame) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public StartSinglePlayerGame setQuotaUser(java.lang.String quotaUser) {
        return (StartSinglePlayerGame) super.setQuotaUser(quotaUser);
      }

      @Override
      public StartSinglePlayerGame setUserIp(java.lang.String userIp) {
        return (StartSinglePlayerGame) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer boardLevel;

      /**

       */
      public java.lang.Integer getBoardLevel() {
        return boardLevel;
      }

      public StartSinglePlayerGame setBoardLevel(java.lang.Integer boardLevel) {
        this.boardLevel = boardLevel;
        return this;
      }

      @Override
      public StartSinglePlayerGame set(String parameterName, Object value) {
        return (StartSinglePlayerGame) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gameEndpoint.submitAnswers".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link SubmitAnswers#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param content the {@link com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.GamePlayStatus}
     * @return the request
     */
    public SubmitAnswers submitAnswers(java.lang.Long id, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.GamePlayStatus content) throws java.io.IOException {
      SubmitAnswers result = new SubmitAnswers(id, content);
      initialize(result);
      return result;
    }

    public class SubmitAnswers extends GriddlerRequest<Void> {

      private static final String REST_PATH = "games/{id}/answers";

      /**
       * Create a request for the method "gameEndpoint.submitAnswers".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link SubmitAnswers#execute()} method to invoke the remote
       * operation. <p> {@link SubmitAnswers#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param id
       * @param content the {@link com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.GamePlayStatus}
       * @since 1.13
       */
      protected SubmitAnswers(java.lang.Long id, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.GamePlayStatus content) {
        super(Griddler.this, "PUT", REST_PATH, content, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public SubmitAnswers setAlt(java.lang.String alt) {
        return (SubmitAnswers) super.setAlt(alt);
      }

      @Override
      public SubmitAnswers setFields(java.lang.String fields) {
        return (SubmitAnswers) super.setFields(fields);
      }

      @Override
      public SubmitAnswers setKey(java.lang.String key) {
        return (SubmitAnswers) super.setKey(key);
      }

      @Override
      public SubmitAnswers setOauthToken(java.lang.String oauthToken) {
        return (SubmitAnswers) super.setOauthToken(oauthToken);
      }

      @Override
      public SubmitAnswers setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SubmitAnswers) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SubmitAnswers setQuotaUser(java.lang.String quotaUser) {
        return (SubmitAnswers) super.setQuotaUser(quotaUser);
      }

      @Override
      public SubmitAnswers setUserIp(java.lang.String userIp) {
        return (SubmitAnswers) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public SubmitAnswers setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public SubmitAnswers set(String parameterName, Object value) {
        return (SubmitAnswers) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the PlayerEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Griddler griddler = new Griddler(...);}
   *   {@code Griddler.PlayerEndpoint.List request = griddler.playerEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public PlayerEndpoint playerEndpoint() {
    return new PlayerEndpoint();
  }

  /**
   * The "playerEndpoint" collection of methods.
   */
  public class PlayerEndpoint {

    /**
     * Create a request for the method "playerEndpoint.assignPlayerPlusId".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link AssignPlayerPlusId#execute()} method to invoke the remote operation.
     *
     * @param googlePlusId
     * @return the request
     */
    public AssignPlayerPlusId assignPlayerPlusId(java.lang.String googlePlusId) throws java.io.IOException {
      AssignPlayerPlusId result = new AssignPlayerPlusId(googlePlusId);
      initialize(result);
      return result;
    }

    public class AssignPlayerPlusId extends GriddlerRequest<Void> {

      private static final String REST_PATH = "players/me/{googlePlusId}";

      /**
       * Create a request for the method "playerEndpoint.assignPlayerPlusId".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link AssignPlayerPlusId#execute()} method to invoke the remote
       * operation. <p> {@link AssignPlayerPlusId#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param googlePlusId
       * @since 1.13
       */
      protected AssignPlayerPlusId(java.lang.String googlePlusId) {
        super(Griddler.this, "PUT", REST_PATH, null, Void.class);
        this.googlePlusId = com.google.api.client.util.Preconditions.checkNotNull(googlePlusId, "Required parameter googlePlusId must be specified.");
      }

      @Override
      public AssignPlayerPlusId setAlt(java.lang.String alt) {
        return (AssignPlayerPlusId) super.setAlt(alt);
      }

      @Override
      public AssignPlayerPlusId setFields(java.lang.String fields) {
        return (AssignPlayerPlusId) super.setFields(fields);
      }

      @Override
      public AssignPlayerPlusId setKey(java.lang.String key) {
        return (AssignPlayerPlusId) super.setKey(key);
      }

      @Override
      public AssignPlayerPlusId setOauthToken(java.lang.String oauthToken) {
        return (AssignPlayerPlusId) super.setOauthToken(oauthToken);
      }

      @Override
      public AssignPlayerPlusId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AssignPlayerPlusId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AssignPlayerPlusId setQuotaUser(java.lang.String quotaUser) {
        return (AssignPlayerPlusId) super.setQuotaUser(quotaUser);
      }

      @Override
      public AssignPlayerPlusId setUserIp(java.lang.String userIp) {
        return (AssignPlayerPlusId) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String googlePlusId;

      /**

       */
      public java.lang.String getGooglePlusId() {
        return googlePlusId;
      }

      public AssignPlayerPlusId setGooglePlusId(java.lang.String googlePlusId) {
        this.googlePlusId = googlePlusId;
        return this;
      }

      @Override
      public AssignPlayerPlusId set(String parameterName, Object value) {
        return (AssignPlayerPlusId) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "playerEndpoint.get".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Get get() throws java.io.IOException {
      Get result = new Get();
      initialize(result);
      return result;
    }

    public class Get extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Player> {

      private static final String REST_PATH = "players/me";

      /**
       * Create a request for the method "playerEndpoint.get".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Get() {
        super(Griddler.this, "GET", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Player.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "playerEndpoint.insert".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param googlePlusId
     * @return the request
     */
    public Insert insert(java.lang.String googlePlusId) throws java.io.IOException {
      Insert result = new Insert(googlePlusId);
      initialize(result);
      return result;
    }

    public class Insert extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Player> {

      private static final String REST_PATH = "players";

      /**
       * Create a request for the method "playerEndpoint.insert".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param googlePlusId
       * @since 1.13
       */
      protected Insert(java.lang.String googlePlusId) {
        super(Griddler.this, "POST", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.Player.class);
        this.googlePlusId = com.google.api.client.util.Preconditions.checkNotNull(googlePlusId, "Required parameter googlePlusId must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String googlePlusId;

      /**

       */
      public java.lang.String getGooglePlusId() {
        return googlePlusId;
      }

      public Insert setGooglePlusId(java.lang.String googlePlusId) {
        this.googlePlusId = googlePlusId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "playerEndpoint.list".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GriddlerRequest<com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.PlayerCollection> {

      private static final String REST_PATH = "players";

      /**
       * Create a request for the method "playerEndpoint.list".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Griddler.this, "GET", REST_PATH, null, com.google.cloud.solutions.sampleapps.griddler.client.griddler.model.PlayerCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "playerEndpoint.registerDevice".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link RegisterDevice#execute()} method to invoke the remote operation.
     *
     * @param deviceId
     * @param deviceType
     * @return the request
     */
    public RegisterDevice registerDevice(java.lang.String deviceId, java.lang.Integer deviceType) throws java.io.IOException {
      RegisterDevice result = new RegisterDevice(deviceId, deviceType);
      initialize(result);
      return result;
    }

    public class RegisterDevice extends GriddlerRequest<Void> {

      private static final String REST_PATH = "players/me/device";

      /**
       * Create a request for the method "playerEndpoint.registerDevice".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link RegisterDevice#execute()} method to invoke the remote
       * operation. <p> {@link RegisterDevice#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param deviceId
       * @param deviceType
       * @since 1.13
       */
      protected RegisterDevice(java.lang.String deviceId, java.lang.Integer deviceType) {
        super(Griddler.this, "PUT", REST_PATH, null, Void.class);
        this.deviceId = com.google.api.client.util.Preconditions.checkNotNull(deviceId, "Required parameter deviceId must be specified.");
        this.deviceType = com.google.api.client.util.Preconditions.checkNotNull(deviceType, "Required parameter deviceType must be specified.");
      }

      @Override
      public RegisterDevice setAlt(java.lang.String alt) {
        return (RegisterDevice) super.setAlt(alt);
      }

      @Override
      public RegisterDevice setFields(java.lang.String fields) {
        return (RegisterDevice) super.setFields(fields);
      }

      @Override
      public RegisterDevice setKey(java.lang.String key) {
        return (RegisterDevice) super.setKey(key);
      }

      @Override
      public RegisterDevice setOauthToken(java.lang.String oauthToken) {
        return (RegisterDevice) super.setOauthToken(oauthToken);
      }

      @Override
      public RegisterDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RegisterDevice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RegisterDevice setQuotaUser(java.lang.String quotaUser) {
        return (RegisterDevice) super.setQuotaUser(quotaUser);
      }

      @Override
      public RegisterDevice setUserIp(java.lang.String userIp) {
        return (RegisterDevice) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String deviceId;

      /**

       */
      public java.lang.String getDeviceId() {
        return deviceId;
      }

      public RegisterDevice setDeviceId(java.lang.String deviceId) {
        this.deviceId = deviceId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Integer deviceType;

      /**

       */
      public java.lang.Integer getDeviceType() {
        return deviceType;
      }

      public RegisterDevice setDeviceType(java.lang.Integer deviceType) {
        this.deviceType = deviceType;
        return this;
      }

      @Override
      public RegisterDevice set(String parameterName, Object value) {
        return (RegisterDevice) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "playerEndpoint.unRegisterDevice".
     *
     * This request holds the parameters needed by the the griddler server.  After setting any optional
     * parameters, call the {@link UnRegisterDevice#execute()} method to invoke the remote operation.
     *
     * @param deviceId
     * @return the request
     */
    public UnRegisterDevice unRegisterDevice(java.lang.String deviceId) throws java.io.IOException {
      UnRegisterDevice result = new UnRegisterDevice(deviceId);
      initialize(result);
      return result;
    }

    public class UnRegisterDevice extends GriddlerRequest<Void> {

      private static final String REST_PATH = "players/me/device";

      /**
       * Create a request for the method "playerEndpoint.unRegisterDevice".
       *
       * This request holds the parameters needed by the the griddler server.  After setting any
       * optional parameters, call the {@link UnRegisterDevice#execute()} method to invoke the remote
       * operation. <p> {@link UnRegisterDevice#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param deviceId
       * @since 1.13
       */
      protected UnRegisterDevice(java.lang.String deviceId) {
        super(Griddler.this, "DELETE", REST_PATH, null, Void.class);
        this.deviceId = com.google.api.client.util.Preconditions.checkNotNull(deviceId, "Required parameter deviceId must be specified.");
      }

      @Override
      public UnRegisterDevice setAlt(java.lang.String alt) {
        return (UnRegisterDevice) super.setAlt(alt);
      }

      @Override
      public UnRegisterDevice setFields(java.lang.String fields) {
        return (UnRegisterDevice) super.setFields(fields);
      }

      @Override
      public UnRegisterDevice setKey(java.lang.String key) {
        return (UnRegisterDevice) super.setKey(key);
      }

      @Override
      public UnRegisterDevice setOauthToken(java.lang.String oauthToken) {
        return (UnRegisterDevice) super.setOauthToken(oauthToken);
      }

      @Override
      public UnRegisterDevice setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UnRegisterDevice) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UnRegisterDevice setQuotaUser(java.lang.String quotaUser) {
        return (UnRegisterDevice) super.setQuotaUser(quotaUser);
      }

      @Override
      public UnRegisterDevice setUserIp(java.lang.String userIp) {
        return (UnRegisterDevice) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String deviceId;

      /**

       */
      public java.lang.String getDeviceId() {
        return deviceId;
      }

      public UnRegisterDevice setDeviceId(java.lang.String deviceId) {
        this.deviceId = deviceId;
        return this;
      }

      @Override
      public UnRegisterDevice set(String parameterName, Object value) {
        return (UnRegisterDevice) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Griddler}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Griddler}. */
    @Override
    public Griddler build() {
      return new Griddler(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GriddlerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGriddlerRequestInitializer(
        GriddlerRequestInitializer griddlerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(griddlerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
